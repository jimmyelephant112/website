(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{517:function(s,t,e){"use strict";e.r(t);var a=e(1),r=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"working-with-filelike-data"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#working-with-filelike-data"}},[s._v("#")]),s._v(" Working with Filelike Data")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://colab.research.google.com/drive/1iC0rS6Q80D6lS7Pi6k65bCU5ytNhTtyZ",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"https://colab.research.google.com/assets/colab-badge.svg",alt:"Open in Colab"}}),e("OutboundLink")],1)]),s._v(" "),e("blockquote",[e("p",[s._v("Status: "),e("strong",[s._v("CORE / STABLE")])])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("pip "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" frictionless\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" -q -O table.csv https://raw.githubusercontent.com/frictionlessdata/frictionless-py/master/data/table.csv\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" table.csv\n")])])]),e("pre",[e("code",[s._v("id,name\n1,english\n2,中国人\n")])]),s._v(" "),e("h2",{attrs:{id:"reading-filelike-data"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reading-filelike-data"}},[s._v("#")]),s._v(" Reading Filelike Data")]),s._v(" "),e("p",[s._v("You can read Filelike using "),e("code",[s._v("Package/Resource")]),s._v(" or "),e("code",[s._v("Table")]),s._v(" API, for example:")]),s._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" frictionless "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Resource\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("with")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("open")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'table.csv'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rb'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("file")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  resource "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Resource"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("path"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("file")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("format")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'csv'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("resource"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("read_rows"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),e("pre",[e("code",[s._v('---------------------------------------------------------------------------\n\nAttributeError                            Traceback (most recent call last)\n\n<ipython-input-4-5489884a036d> in <module>()\n      3 with open(\'table.csv\', \'rb\') as file:\n      4   resource = Resource(path=file, format=\'csv\')\n----\x3e 5   print(resource.read_rows())\n\n\n/usr/local/lib/python3.6/dist-packages/frictionless/resource.py in read_rows(self)\n    535             Row[]: resource rows\n    536         """\n--\x3e 537         rows = list(self.read_row_stream())\n    538         return rows\n    539\n\n\n/usr/local/lib/python3.6/dist-packages/frictionless/resource.py in read_row_stream(self)\n    543             gen<Row[]>: row stream\n    544         """\n--\x3e 545         with self.to_table() as table:\n    546             for row in table.row_stream:\n    547                 yield row\n\n\n/usr/local/lib/python3.6/dist-packages/frictionless/table.py in __enter__(self)\n    205     def __enter__(self):\n    206         if self.closed:\n--\x3e 207             self.open()\n    208         return self\n    209\n\n\n/usr/local/lib/python3.6/dist-packages/frictionless/table.py in open(self)\n    390             self.__resource.stats = {"hash": "", "bytes": 0, "fields": 0, "rows": 0}\n    391             self.__parser = system.create_parser(self.__resource)\n--\x3e 392             self.__parser.open()\n    393             self.__data_stream = self.__read_data_stream()\n    394             self.__row_stream = self.__read_row_stream()\n\n\n/usr/local/lib/python3.6/dist-packages/frictionless/parser.py in open(self)\n     70             raise exceptions.FrictionlessException(error)\n     71         try:\n---\x3e 72             self.__loader = self.read_loader()\n     73             self.__data_stream = self.read_data_stream()\n     74             return self\n\n\n/usr/local/lib/python3.6/dist-packages/frictionless/parser.py in read_loader(self)\n    101         if self.loading:\n    102             loader = system.create_loader(self.resource)\n--\x3e 103             return loader.open()\n    104\n    105     def read_data_stream(self):\n\n\n/usr/local/lib/python3.6/dist-packages/frictionless/loader.py in open(self)\n     79             raise exceptions.FrictionlessException(error)\n     80         try:\n---\x3e 81             self.__byte_stream = self.read_byte_stream()\n     82             return self\n     83         except Exception:\n\n\n/usr/local/lib/python3.6/dist-packages/frictionless/loader.py in read_byte_stream(self)\n    109         """\n    110         try:\n--\x3e 111             byte_stream = self.read_byte_stream_create()\n    112             byte_stream = self.read_byte_stream_infer_stats(byte_stream)\n    113             byte_stream = self.read_byte_stream_decompress(byte_stream)\n\n\n/usr/local/lib/python3.6/dist-packages/frictionless/loaders/local.py in read_byte_stream_create(self)\n     17         scheme = "file://"\n     18         source = self.resource.source\n---\x3e 19         if source.startswith(scheme):\n     20             source = source.replace(scheme, "", 1)\n     21         byte_stream = io.open(source, "rb")\n\n\nAttributeError: \'list\' object has no attribute \'startswith\'\n')])]),s._v(" "),e("h2",{attrs:{id:"writing-filelike-data"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#writing-filelike-data"}},[s._v("#")]),s._v(" Writing Filelike Data")]),s._v(" "),e("p",[s._v("The same is actual for writing CSV:")]),s._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" frictionless "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Resource\n\nresource "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Resource"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("data"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'id'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'english'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'german'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nresource"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("write"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'table.new.csv'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("cat table.new.csv\n")])])]),e("h2",{attrs:{id:"configuring-filelike-data"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#configuring-filelike-data"}},[s._v("#")]),s._v(" Configuring Filelike Data")])])}),[],!1,null,null,null);t.default=r.exports}}]);